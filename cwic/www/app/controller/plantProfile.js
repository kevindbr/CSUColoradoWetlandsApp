/*
 * File: app/controller/plantProfile.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CWIC.controller.plantProfile', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'plantProfile'
        ],

        refs: {
            fieldGuide: '#fieldguide',
            plantProfile: 'plantprofile',
            plantList: 'list[id=plantlist]'
        },

        control: {
            "#similarsplist": {
                itemtap: 'onListItemTap'
            },
            "button": {
                tap: 'onButtonTap'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        //debugger;

        if (buttonBack.getItemId()==="backToList") {

            var plantStore,
                newPlantId = record.getId(),
                plantRecord,
                form = this.getPlantProfile();

            plantStore = this.getPlantList().getStore();

            index = form.recordIndex;

            //Grabs the plant that matches the ID by going through the store as an array
            Ext.Array.each(plantStore.getData().all, function findPlant(element, index) {
                if (element.data.ID===newPlantId)
                {
                    plantRecord=element;
                    return false;
                }

            }, this);

            //if you got a plant, set it up
            if(plantRecord)
            {

                form.setupPlantProfile(plantRecord,index);

                form.animateActiveItem(0, 'slide');

            }
        }


    },

    onButtonTap: function(button, e, eOpts) {
        var me = this,
            fieldGuideContainer = me.getFieldGuide(),
            plantProfileContainer = me.getPlantProfile(),
            record,
            recordIndex;
        //debugger;
        if (button.config.itemId === "backToList") {

            if (buttonBack.getItemId()==="backToList") {
                fieldGuideContainer.animateActiveItem(CWIC.util.Cwic.plantListTab, {
                    type: 'slide',
                    direction: 'right'
                });
            }
            else {
                recordIndex = buttonBack.getItemId();
                record = me.getPlantList().getStore().getAt(recordIndex);

                //Reset the button id to backToList
                buttonBack.setItemId("backToList");

                //Set up the container
                plantProfileContainer.setupPlantProfile(record,recordIndex,"list");

                plantProfileContainer.animateActiveItem(2, {
                    type: 'slide',
                    direction: 'right'
                });
            }
        }
        else if (button.config.itemId === "up"||button.config.itemId === "down"){

            recordIndex = plantProfileContainer.recordIndex;

            //Move the index up or down depending on what is clicked
            if (button.config.itemId === "up") recordIndex = recordIndex - 1;
            else recordIndex = recordIndex + 1;

            //Changes the selected record back in the plant list
            me.getPlantList().select(recordIndex,false,false);

            //Get the record
            record = me.getPlantList().getStore().getAt(recordIndex);

            //Setup the display
            plantProfileContainer.setupPlantProfile(record,recordIndex,"list");

        }
    }

});