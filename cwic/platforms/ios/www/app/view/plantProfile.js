/*
 * File: app/view/plantProfile.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CWIC.view.plantProfile', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.plantprofile',

    requires: [
        'Ext.TitleBar',
        'Ext.Button',
        'Ext.carousel.Carousel',
        'Ext.dataview.List',
        'Ext.XTemplate',
        'Ext.tab.Bar',
        'Ext.Img',
        'Ext.Label'
    ],

    config: {
        itemId: 'plantprofile',
        items: [
            {
                xtype: 'titlebar',
                cls: 'smTitle',
                docked: 'top',
                itemId: 'profiletitlebar',
                layout: {
                    type: 'hbox',
                    align: 'center'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'backToList',
                        ui: 'back',
                        text: 'Back'
                    },
                    {
                        xtype: 'button',
                        align: 'right',
                        disabled: false,
                        itemId: 'up',
                        iconCls: 'arrow_up'
                    },
                    {
                        xtype: 'button',
                        align: 'right',
                        itemId: 'down',
                        iconCls: 'arrow_down'
                    }
                ]
            },
            {
                xtype: 'container',
                title: 'Images',
                iconCls: 'photos',
                padding: '',
                layout: 'fit',
                items: [
                    {
                        xtype: 'carousel',
                        itemId: 'imagecarousel'
                    }
                ]
            },
            {
                xtype: 'container',
                title: 'General',
                iconCls: 'info',
                itemId: 'general',
                padding: 10,
                scrollable: true
            },
            {
                xtype: 'container',
                title: 'Similar',
                iconCls: 'more',
                layout: 'fit',
                scrollable: true,
                items: [
                    {
                        xtype: 'container',
                        docked: 'top',
                        height: '33%',
                        id: 'similar',
                        scrollable: 'vertical'
                    },
                    {
                        xtype: 'list',
                        docked: 'bottom',
                        height: '67%',
                        id: 'similarsplist',
                        itemTpl: [
                            '<table>',
                            '    <tr>',
                            '        <td>',
                            '           <img src="resources/images/{SimilarSpIcon}" class=\'listImg\'>',
                            '        </td>    ',
                            '         <td class="listName">',
                            '            {SimilarSpSciNameAuthor}<br />',
                            '        {Reason}',
                            '        ',
                            '        </td>',
                            '    </tr>',
                            '</table>'
                        ],
                        store: 'SimilarSpecies'
                    }
                ]
            },
            {
                xtype: 'container',
                title: 'Ecology',
                iconCls: 'leaf',
                id: 'ecology',
                padding: 10,
                scrollable: true
            },
            {
                xtype: 'container',
                title: 'Range',
                iconCls: 'map2',
                id: 'range',
                padding: 10,
                scrollable: true
            },
            {
                xtype: 'container',
                title: 'Refs',
                iconCls: 'books',
                layout: 'fit',
                scrollable: true,
                items: [
                    {
                        xtype: 'list',
                        itemId: 'reflist',
                        itemTpl: [
                            '<div><span class="sm">{FullCitation}</span></div>'
                        ],
                        store: 'References'
                    }
                ]
            }
        ],
        tabBar: {
            docked: 'bottom',
            scrollable: 'horizontal'
        }
    },

    setupPlantProfile: function(data, index, source) {
        var me = this,
            form,
            buttonUp,
            buttonDown,
            imageCarousel,
            imageStore,
            general,
            similar,
            ecology,
            range,
            record = Ext.create('CWIC.model.Plant', data.data),
            refList,
            refStore,
            similarSpList,
            similarSpStore;

        //Load and format plant profile container
        form = me;

        form.recordIndex = index;

        form.down('#profiletitlebar').setTitle(record.get('SciNameNoAuthor')); //Sets the title to the scientific name

        //Get all the elements of the plant profile we need to interact with
        buttonUp = form.down('#up');
        buttonDown = form.down('#down');
        buttonBack = form.down('#backToList');
        imageCarousel = form.down('#imagecarousel');
        general = form.down('#general');
        similar = form.down('#similar');
        ecology = form.down('#ecology');
        range = form.down('#range');
        refList = form.down('#reflist');
        refStore = refList.getStore();
        similarSpList = form.down('#similarsplist');
        similarSpStore = similarSpList.getStore();

        //Disable/enable buttons based on where you are in the record set
        if(source=="list")
        {
            buttonUp.setHidden(false);
            buttonDown.setHidden(false);

            if (index === 0) buttonUp.setDisabled(true);
            else buttonUp.setDisabled(false);

            //This DOESN'T work any more, because there is no Plants store
            if (index === (Ext.getStore('Plants').getCount() - 1)) buttonDown.setDisabled(true);
            else buttonDown.setDisabled(false);
        }
        else
        {
            buttonUp.setHidden(true);
            buttonDown.setHidden(true);
            buttonBack.setItemId(index);
        }

        // Empty, generate and fill image containers
        imageCarousel.removeAll();

        record.imagesStore.each(function(item, index, length) {
            imageCarousel.add({
                xtype: 'container',
                layout: {
                    type: 'fit'
                },
                items: [
                {
                    xtype: 'image',
                    src: 'resources/images/' + item.get('FileName')
                },{

                    xtype: 'label',
                    html:  '<span class="sm">Image credit: ' + item.get('Credit') + '</span>',
                    baseCls: 'photoLabel',
                    docked: 'top'
                },{

                    xtype: 'label',
                    html:  '<div style="height: 25px;">&nbsp;</div>',
                    baseCls: 'photoLabel',
                    docked: 'bottom'
                }
                ]
            });
        });
        imageCarousel.setActiveItem(0);

        // Fill out general information container
        general.setHtml(CWIC.util.Cwic.generalTemplate.apply(record.getData()));

        // Fill out similar species information container
        similar.setHtml(CWIC.util.Cwic.similarTemplate.apply(record.getData()));

        //Fill out the ecology container
        ecology.setHtml(CWIC.util.Cwic.ecologyTemplate.apply(record.getData()));

        //Fill out the range container
        range.setHtml(CWIC.util.Cwic.rangeTemplate.apply(record.getData()));

        // Fill list of references
        refStore.removeAll();
        refStore.add(record.referencesStore.getRange());

        // Fill list of references
        similarSpStore.removeAll();
        similarSpStore.add(record.similarspeciesStore.getRange());
    }

});