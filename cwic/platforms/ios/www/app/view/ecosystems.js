/*
 * File: app/view/ecosystems.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CWIC.view.ecosystems', {
    extend: 'Ext.Container',
    alias: 'widget.ecosystems',

    requires: [
        'Ext.TitleBar',
        'Ext.Button'
    ],

    config: {
        id: 'ecosystems',
        scrollable: 'vertical',
        layout: {
            type: 'vbox',
            align: 'center',
            pack: 'center'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'Wetland Types',
                items: [
                    {
                        xtype: 'button',
                        itemId: 'mapsHomeButton',
                        iconCls: 'home2'
                    }
                ]
            },
            {
                xtype: 'button',
                itemId: 'marshButton',
                margin: 10,
                width: '90%',
                text: 'Marsh'
            },
            {
                xtype: 'button',
                itemId: 'wetmeadowButton',
                margin: 10,
                width: '90%',
                text: 'Wet Meadow'
            },
            {
                xtype: 'button',
                itemId: 'mesicmeadowButton',
                margin: 10,
                width: '90%',
                text: 'Mesic Meadow'
            },
            {
                xtype: 'button',
                itemId: 'fenButton',
                margin: 10,
                width: '90%',
                text: 'Fen'
            },
            {
                xtype: 'button',
                itemId: 'playaButton',
                margin: 10,
                width: '90%',
                text: 'Playa'
            },
            {
                xtype: 'button',
                itemId: 'woodlandButton',
                margin: 10,
                width: '90%',
                text: 'Subalpine Riparian Woodland'
            },
            {
                xtype: 'button',
                itemId: 'shrublandButton',
                margin: 10,
                width: '90%',
                text: 'Subalpine Riparian Shrubland'
            },
            {
                xtype: 'button',
                itemId: 'foothillsButton',
                margin: 10,
                width: '90%',
                text: 'Foothills Riparian'
            },
            {
                xtype: 'button',
                itemId: 'plainsripButton',
                margin: 10,
                width: '90%',
                text: 'Plains Riparian'
            },
            {
                xtype: 'button',
                itemId: 'plainsfloodButton',
                margin: 10,
                width: '90%',
                text: 'Plains Floodplain'
            },
            {
                xtype: 'button',
                itemId: 'greasewoodButton',
                margin: 10,
                width: '90%',
                text: 'Greasewood Flats'
            },
            {
                xtype: 'button',
                itemId: 'hangingButton',
                margin: 10,
                width: '90%',
                text: 'Hanging Garden'
            }
        ],
        listeners: [
            {
                fn: 'onMarshButtonTap',
                event: 'tap',
                delegate: '#marshButton'
            },
            {
                fn: 'onWetmeadowButtonTap',
                event: 'tap',
                delegate: '#wetmeadowButton'
            },
            {
                fn: 'onMesicmeadowButtonTap',
                event: 'tap',
                delegate: '#mesicmeadowButton'
            },
            {
                fn: 'onFenButtonTap',
                event: 'tap',
                delegate: '#fenButton'
            },
            {
                fn: 'onPlayaButtonTap',
                event: 'tap',
                delegate: '#playaButton'
            },
            {
                fn: 'onWoodlandButtonTap',
                event: 'tap',
                delegate: '#woodlandButton'
            },
            {
                fn: 'onShrublandButtonTap',
                event: 'tap',
                delegate: '#shrublandButton'
            },
            {
                fn: 'onFoothillsButtonTap',
                event: 'tap',
                delegate: '#foothillsButton'
            },
            {
                fn: 'onPlainsripButtonTap',
                event: 'tap',
                delegate: '#plainsripButton'
            },
            {
                fn: 'onPlainsfloodButtonTap',
                event: 'tap',
                delegate: '#plainsfloodButton'
            },
            {
                fn: 'onGreasewoodButtonTap',
                event: 'tap',
                delegate: '#greasewoodButton'
            },
            {
                fn: 'onHangingButtonTap',
                event: 'tap',
                delegate: '#hangingButton'
            }
        ]
    },

    onMarshButtonTap: function(button, e, eOpts) {
        var marshes = button.marshes;
        if (!marshes) {
            marshes = button.marshes = Ext.widget('marshes');
        }
        marshes.showBy(button);
    },

    onWetmeadowButtonTap: function(button, e, eOpts) {
        var wetmeadows = button.wetmeadowPanel;
        if (!wetmeadows) {
            wetmeadows = button.wetmeadowPanel = Ext.widget('wetmeadows');
        }
        wetmeadows.showBy(button);
    },

    onMesicmeadowButtonTap: function(button, e, eOpts) {
        var mesicmeadows = button.mesicmeadowPanel;
        if (!mesicmeadows) {
            mesicmeadows = button.mesicmeadowPanel = Ext.widget('mesicmeadows');
        }
        mesicmeadows.showBy(button);
    },

    onFenButtonTap: function(button, e, eOpts) {
        var fens = button.fensPanel;
        if (!fens) {
            fens = button.fensPanel = Ext.widget('fens');
        }
        fens.showBy(button);
    },

    onPlayaButtonTap: function(button, e, eOpts) {
        var playas = button.playaPanel;
        if (!playas) {
            playas = button.playaPanel = Ext.widget('playas');
        }
        playas.showBy(button);
    },

    onWoodlandButtonTap: function(button, e, eOpts) {
        var woodlands = button.woodlandPanel;
        if (!woodlands) {
            woodlands = button.woodlandPanel = Ext.widget('woodlands');
        }
        woodlands.showBy(button);
    },

    onShrublandButtonTap: function(button, e, eOpts) {
        var shrublands = button.shrublandPanel;
        if (!shrublands) {
            shrublands = button.shrublandPanel = Ext.widget('shrublands');
        }
        shrublands.showBy(button);
    },

    onFoothillsButtonTap: function(button, e, eOpts) {
        var foothills = button.foothillPanel;
        if (!foothills) {
            foothills = button.foothillPanel = Ext.widget('foothills');
        }
        foothills.showBy(button);
    },

    onPlainsripButtonTap: function(button, e, eOpts) {
        var plainsrips = button.plainsripPanel;
        if (!plainsrips) {
            plainsrips = button.plainsripPanel = Ext.widget('plainsrips');
        }
        plainsrips.showBy(button);
    },

    onPlainsfloodButtonTap: function(button, e, eOpts) {
        var plainsfloods = button.plainsfloodPanel;
        if (!plainsfloods) {
            plainsfloods = button.plainsfloodPanel = Ext.widget('plainsfloods');
        }
        plainsfloods.showBy(button);
    },

    onGreasewoodButtonTap: function(button, e, eOpts) {
        var greasewoods = button.greasewoodPanel;
        if (!greasewoods) {
            greasewoods = button.greasewoodPanel = Ext.widget('greasewoods');
        }
        greasewoods.showBy(button);
    },

    onHangingButtonTap: function(button, e, eOpts) {
        var hangings = button.hangingPanel;
        if (!hangings) {
            hangings = button.hangingPanel = Ext.widget('hangings');
        }
        hangings.showBy(button);
    }

});